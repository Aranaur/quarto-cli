---
format: html
title: Quarto Filter Trace Viewer
execute: 
  echo: false
---

```{ojs}
dz = htl.html`<div id="dropzone">
<style>
#dropzone {
  border: 1px solid black;
  padding: 18px;
  text-align: center;
}
</style>
<span>Drag+drop here a file generated with QUARTO_TRACE_FILTERS.</span>
</div>`
```


```{ojs}
// Based on 
// - https://observablehq.com/@triptych/loading-a-file-via-drag-and-drop-in-observable
// - https://observablehq.com/@tuner/using-event-listeners
trace = Generators.observe((change) => {
  const dropped = async (ev) => {

    // Prevent default behavior (Prevent file from being opened)
    ev.preventDefault();

    if (!ev.dataTransfer.items) {
      throw new Error("Unimplemented...? shrug");
    }

    // Use DataTransferItemList interface to access the file(s)
    for (var i = 0; i < ev.dataTransfer.items.length; i++) {
      // If dropped items aren't files, reject them
      if (ev.dataTransfer.items[i].kind !== 'file')
        continue;
      const file = ev.dataTransfer.items[i].getAsFile();
      const text = await file.text();
      change(JSON.parse(text));
    }
  }
  dz.addEventListener("drop", dropped);
  dz.addEventListener("dragover", (ev) => {
    ev.preventDefault();
  });
  change(undefined);
  return () => {}; // dz.removeEventListener("drop", clicked);
})
```

```{ojs}
import { convertDoc } from "./convert-pandoc-json.js";
import { drawTree } from "./draw-tree.js";
import { jsonpatch } from "./jsonpatch.js";
```

::: {.column-page}

```{ojs}
{
  if (trace === undefined) {
    return "No trace uploaded";
  }

  const output = htl.html`<div></div>`;
  const sel = d3.select(output);
  sel.append("h2").text("Starting doc");

  drawTree(sel, convertDoc(trace.data[0].doc), "Doc");

  let isNoOp = true;

  for (let i = 1; i < trace.data.length; ++i) {
    const ops = jsonpatch.compare(
      convertDoc(trace.data[i - 1].doc),
      convertDoc(trace.data[i].doc)
    );
    if (ops.length === 0) {
      sel.append("h2").text(`Filter: ${trace.data[i].state} (no op)`);
      if (!isNoOp) {
        drawTree(sel, convertDoc(trace.data[i].doc), "Doc");
        isNoOp = true;
      }
      continue;
    }
    isNoOp = false;

    sel.append("h2").text(`Filter: ${trace.data[i].state}`);
    drawTree(sel, convertDoc(trace.data[i].doc), "Doc");
    drawTree(sel, ops, "Ops")
      .style("margin-bottom", "0.1em")
      .style("margin-top", "0.1em");
  }

  return output;
}
```

:::